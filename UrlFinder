package grabber;

import java.net.*;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.io.*;

public class UrlFinder {

	static String inputLine;
	static String topUrl = "http://www.sportsdirect.com/brands/azbrands/news";
	static String identifier = "href=\"";
	static String cut;
	static Path MainPath = Paths.get("U:/Urls/test.txt");
	static int cutPointStart = 0, cutPointEnd = 0;
	static Charset charset = Charset.forName("US-ASCII");
	static ArrayList<String> wanted = new ArrayList<String>();

	public static void main(String[] args) throws Exception {

		URL oracle = new URL("http://www.sportsdirect.com");
		BufferedReader in = new BufferedReader(new InputStreamReader(
				oracle.openStream()));

		while ((inputLine = in.readLine()) != null) {

			if (inputLine.contains(identifier)) {

				cutPointStart = inputLine.indexOf(identifier, -1);
				cutPointEnd = inputLine.indexOf("\"", cutPointStart
						+ identifier.length());

				cut = inputLine.substring(cutPointStart + identifier.length(),
						cutPointEnd);
				if (cut.contains("#") == false && cut.contains("{{") == false) {
					if (cut.startsWith("/")) {
						cut = topUrl + cut;
					}

					if (cut.startsWith(topUrl) == true
							&& checkUrlFound(cut) == false) {
						wanted.add(cut);
						// writeTotext(cut);
					}
				}
			}
		}
		in.close();
		try (BufferedWriter writer = new BufferedWriter(new FileWriter("U:/Urls/test.txt", true))) {
			for (int i = 0; i < wanted.size(); i++) {
				System.out.println(wanted.get(i));
				writer.write(wanted.get(i));
				writer.newLine();
				
			}
		}
	}

	public static boolean checkUrlFound(String Inputline) {
		boolean found = false;
		try (BufferedReader reader = Files.newBufferedReader(MainPath, charset)) {
			String line;
			while ((line = reader.readLine()) != null) {
				if (Inputline.equalsIgnoreCase(line)) {
					found = true;
					System.out.println("found it");
				}
			}
		} catch (IOException e) {
			System.out.println("no worres");
			found = false;
		}
		for (int i = 0; i < wanted.size(); i++) {
			if (Inputline.equalsIgnoreCase(wanted.get(i))) {
				found = true;
				System.out.println("it has been found");
			}
		}
		return found;
	}

	public static void writeTotext(String inputLine) throws IOException {
		try (BufferedWriter writer = Files.newBufferedWriter(MainPath, charset,
				StandardOpenOption.CREATE)) {
			writer.write(inputLine);
			writer.newLine();
		}
	}
}
